unit Model.Declarations;

interface
uses
  Data.DB,
  System.Generics.Collections,
  Support.Attributes,
  System.Classes,
  Support.LanguageDictionary;

type
  [Table('CurrencyType', '', 'g')]
  TCurrencyType = class
  private
    FCurrencyId : Integer;
    FCurrencyCode : string;
    FCurrencyName : string;
  public
    [Column('CurrencyId', [cpPrimaryKey, cpNotNull, cpAutoGenerated], 0, 0, 0)]
    property CurrencyId: Integer read FCurrencyId write FCurrencyId;
    [Column([cpRequired, cpNotNull], 5, 0, 0)]
    property CurrencyCode: string read FCurrencyCode write FCurrencyCode;
    [Column([], 50, 0, 0)]
    property CurrencyName: string read FCurrencyName write FCurrencyName;
  end;

  [Table('CurrencyDailyRate', '')]
  TCurrencyDaily = class
  private
    FCurrencyDailyRateId : Integer;
    FCurrencyDate : TDate;
    FCurrencyTypeId : integer;
    FBuyingRate : double;
    FSellingRate : double;
  public
    [Column('CurrencyDailyId', [cpRequired, cpPrimaryKey, cpNotNull, cpAutoGenerated], 0, 0, 0)]
    property CurrencyDailyRateId: Integer read FCurrencyDailyRateId write FCurrencyDailyRateId;
    [Column]
    property CurrencyDate: TDate read FCurrencyDate write FCurrencyDate;
    [Column]
    property CurrencyTypeId: integer read FCurrencyTypeId write FCurrencyTypeId;
    [Column]
    property BuyingRate: double read FBuyingRate write FBuyingRate;
    [Column]
    property SellingRate: double read FSellingRate write FSellingRate;
  end;

  [Table('Customer', '')]
  TCustomer = class
  private
    FCustomerId : Integer;
    FCustomerName : String;
    FAddressLine1: string;
    FAddressLine2: string;
    FAddressLine3: string;
    FCity: string;
    FCountry: string;
    FContactPerson: string;
    FPhone: string;
    FFax: string;
    FContactEMail: string;
    FCurrencyTypeId: integer;
    FTotalDebit: double;
    FTotalCredit: double;
    FBalance: double;
    FInBlackList: boolean;
    FIsActive: boolean;
  public
    [Column('CustomerId', [cpRequired, cpPrimaryKey, cpNotNull, cpAutoGenerated], 0, 0, 0)]
    property CustomerId: Integer read FCustomerId write FCustomerId;
    [Column]
    property CustomerName: String read FCustomerName write FCustomerName;
    [Column]
    property AddressLine1: string read FAddressLine1 write FAddressLine1;
    [Column]
    property AddressLine2: string read FAddressLine2 write FAddressLine2;
    [Column]
    property AddressLine3: string read FAddressLine3 write FAddressLine3;
    [Column]
    property City: string read FCity write FCity;
    [Column]
    property Country: string read FCountry write FCountry;
    [Column]
    property ContactPerson: string read FContactPerson write FContactPerson;
    [Column]
    property Phone: string read FPhone write FPhone;
    [Column]
    property Fax: string read FFax write FFax;
    [Column]
    property ContactEMail: string read FContactEMail write FContactEMail;
    [Column]
    property CurrencyTypeId: integer read FCurrencyTypeId write FCurrencyTypeId;
    [Column]
    property TotalDebit: double read FTotalDebit write FTotalDebit;
    [Column]
    property TotalCredit: double read FTotalCredit write FTotalCredit;
    [Column]
    property Balance: double read FBalance write FBalance;
    [Column]
    property InBlackList: boolean read FInBlackList write FInBlackList;
    [Column]
    property IsActive: boolean read FIsActive write FIsActive;
  end;

  [Table('Supplier', '')]
  TSupplier = class
  private
    FSupplierId : Integer;
    FSupplierName : String;
    FAddressLine1: string;
    FAddressLine2: string;
    FAddressLine3: string;
    FCity: string;
    FCountry: string;
    FContactPerson: string;
    FPhone: string;
    FFax: string;
    FContactEMail: string;
    FCurrencyTypeId: integer;
    FTotalDebit: double;
    FTotalCredit: double;
    FBalance: double;
    FInBlackList: boolean;
    FIsActive: boolean;
  public
    [Column('SupplierId', [cpRequired, cpPrimaryKey, cpNotNull, cpAutoGenerated], 0, 0, 0)]
    property SupplierId: Integer read FSupplierId write FSupplierId;
    [Column]
    property SupplierName: String read FSupplierName write FSupplierName;
    [Column]
    property AddressLine1: string read FAddressLine1 write FAddressLine1;
    [Column]
    property AddressLine2: string read FAddressLine2 write FAddressLine2;
    [Column]
    property AddressLine3: string read FAddressLine3 write FAddressLine3;
    [Column]
    property City: string read FCity write FCity;
    [Column]
    property Country: string read FCountry write FCountry;
    [Column]
    property ContactPerson: string read FContactPerson write FContactPerson;
    [Column]
    property Phone: string read FPhone write FPhone;
    [Column]
    property Fax: string read FFax write FFax;
    [Column]
    property ContactEMail: string read FContactEMail write FContactEMail;
    [Column]
    property CurrencyTypeId: integer read FCurrencyTypeId write FCurrencyTypeId;
    [Column]
    property TotalDebit: double read FTotalDebit write FTotalDebit;
    [Column]
    property TotalCredit: double read FTotalCredit write FTotalCredit;
    [Column]
    property Balance: double read FBalance write FBalance;
    [Column]
    property InBlackList: boolean read FInBlackList write FInBlackList;
    [Column]
    property IsActive: boolean read FIsActive write FIsActive;
  end;

  [Table('InventoryGroup', '')]
  TInventoryGroup = class
  private
    FInventoryGroupId: integer;
    FInventoryGroupName: string;
  public
    [Column('InventoryGroupId', [cpRequired, cpPrimaryKey, cpNotNull, cpAutoGenerated], 0, 0, 0)]
    property InventoryGroupId: integer read FInventoryGroupId write FInventoryGroupId;
    [Column]
    property InventoryGroupName: string read FInventoryGroupName write FInventoryGroupName;
  end;

  [Table('Inventory', '')]
  TInventory = class
  private
    FInventoryId: integer;
    FInventoryGroupId: integer;
    FMainSupplierId: integer;
    FInventoryName: string;
    FSpecCode: string;
    FStoragePlace: string;
    FPictureFileName: string;
    FMeasurements: string;
    FCurrencyTypeId: integer;
    FBuyingPrice: double;
    FSellingPrice: double;
    FVatPercentage: double;
    FTotalIncomingQtty: double;
    FTotalOutgoingQtty: double;
    FTotalIncomingAmount: double;
    FTotalOutgoingAmount: double;
    FOtvAmount: double;
    FUnitDesc: string;
  public
    [Column('InventoryId', [cpRequired, cpPrimaryKey, cpNotNull, cpAutoGenerated], 0, 0, 0)]
    property InventoryId: integer read FInventoryId write FInventoryId;
    [Column]
    property InventoryGroupId: integer read FInventoryGroupId write FInventoryGroupId;
    [Column]
    property MainSupplierId: integer read FMainSupplierId write FMainSupplierId;
    [Column]
    property InventoryName: string read FInventoryName write FInventoryName;
    [Column]
    property SpecCode: string read FSpecCode write FSpecCode;
    [Column]
    property StoragePlace: string read FStoragePlace write FStoragePlace;
    [Column]
    property PictureFileName: string read FPictureFileName write FPictureFileName;
    [Column]
    property Measurements: string read FMeasurements write FMeasurements;
    [Column]
    property CurrencyTypeId: integer read FCurrencyTypeId write FCurrencyTypeId;
    [Column]
    property BuyingPrice: double read FBuyingPrice write FBuyingPrice;
    [Column]
    property SellingPrice: double read FSellingPrice write FSellingPrice;
    [Column]
    property VatPercentage: double read FVatPercentage write FVatPercentage;
    [Column]
    property TotalIncomingQtty: double read FTotalIncomingQtty write FTotalIncomingQtty;
    [Column]
    property TotalOutgoingQtty: double read FTotalOutgoingQtty write FTotalOutgoingQtty;
    [Column]
    property TotalIncomingAmount: double read FTotalIncomingAmount write FTotalIncomingAmount;
    [Column]
    property TotalOutgoingAmount: double read FTotalOutgoingAmount write FTotalOutgoingAmount;
    [Column]
    property OtvAmount: double read FOtvAmount write FOtvAmount;
    [Column]
    property UnitDesc: string read FUnitDesc write FUnitDesc;
  end;

  [Table('PurchaseInvoiceHeader', '')]
  TPurchaseInvoiceHeader = class
  private
    FPurchaseInvoiceHeaderId: integer;
    FInvoiceDate: TDate;
    FSupplierId: integer;
    FSpecCode: string;
    FInvDescription: string;
    FCurrencyTypeId: integer;
    FCurrencyRate: double;
    FTotalAmount: double;
    FVatPercentage1: double;
    FVatAmount1: double;
    FVatPercentage2: double;
    FVatAmount2: double;
    FVatPercentage3: double;
    FVatAmount3: double;
    FTotalOtvAmount: double;
    FDueDate: integer;
    FPaid: boolean;
  public
    [Column('PurchaseInvoiceHeaderId', [cpRequired, cpPrimaryKey, cpNotNull], 0, 0, 0)]
    property PurchaseInvoiceHeaderId: integer read FPurchaseInvoiceHeaderId write FPurchaseInvoiceHeaderId;
    [Column]
    property InvoiceDate: TDate read FInvoiceDate write FInvoiceDate;
    [Column]
    property SupplierId: integer read FSupplierId write FSupplierId;
    [Column]
    property SpecCode: string read FSpecCode write FSpecCode;
    [Column]
    property InvDescription: string read FInvDescription write FInvDescription;
    [Column]
    property CurrencyTypeId: integer read FCurrencyTypeId write FCurrencyTypeId;
    [Column]
    property CurrencyRate: double read FCurrencyRate write FCurrencyRate;
    [Column]
    property TotalAmount: double read FTotalAmount write FTotalAmount;
    [Column]
    property VatPercentage1: double read FVatPercentage1 write FVatPercentage1;
    [Column]
    property VatAmount1: double read FVatAmount1 write FVatAmount1;
    [Column]
    property VatPercentage2: double read FVatPercentage2 write FVatPercentage2;
    [Column]
    property VatAmount2: double read FVatAmount2 write FVatAmount2;
    [Column]
    property VatPercentage3: double read FVatPercentage3 write FVatPercentage3;
    [Column]
    property VatAmount3: double read FVatAmount3 write FVatAmount3;
    [Column]
    property TotalOtvAmount: double read FTotalOtvAmount write FTotalOtvAmount;
    [Column]
    property DueDate: integer read FDueDate write FDueDate;
    [Column]
    property Paid: boolean read FPaid write FPaid;
  end;

  [Table('PurchaseInvoiceHeader', '')]
  TPurchaseInvoiceDetail = class
  private
    FPurchaseInvoiceDetailId: integer;
    FPurchaseInvoiceHeaderId: integer;
    FInventoryId: integer;
    FQuantity: double;
    FUnitPrice: double;
    FVatPercentage: double;
    FVatAmount: double;
    FOtvAmount: double;
    FTotalAmount: double;
    FSpecCode: string;
    FLineDescription: string;
    FInvoiceDate: TDateTime;
    FSupplierId: integer;
    FCurrencyTypeId: integer;
    FCurrencyRate: double;
  public
    [Column('PurchaseInvoiceDetailId', [cpRequired, cpPrimaryKey, cpNotNull, cpAutoGenerated], 0, 0, 0)]
    property PurchaseInvoiceDetailId: integer read FPurchaseInvoiceDetailId write FPurchaseInvoiceDetailId;
    [Column]
    property PurchaseInvoiceHeaderId: integer read FPurchaseInvoiceHeaderId write FPurchaseInvoiceHeaderId;
    [Column]
    property InventoryId: integer read FInventoryId write FInventoryId;
    [Column]
    property Quantity: double read FQuantity write FQuantity;
    [Column]
    property UnitPrice: double read FUnitPrice write FUnitPrice;
    [Column]
    property VatPercentage: double read FVatPercentage write FVatPercentage;
    [Column]
    property VatAmount: double read FVatAmount write FVatAmount;
    [Column]
    property OtvAmount: double read FOtvAmount write FOtvAmount;
    [Column]
    property TotalAmount: double read FTotalAmount write FTotalAmount;
    [Column]
    property SpecCode: string read FSpecCode write FSpecCode;
    [Column]
    property LineDescription: string read FLineDescription write FLineDescription;
    [Column]
    property InvoiceDate: TDateTime read FInvoiceDate write FInvoiceDate;
    [Column]
    property SupplierId: integer read FSupplierId write FSupplierId;
    [Column]
    property CurrencyTypeId: integer read FCurrencyTypeId write FCurrencyTypeId;
    [Column]
    property CurrencyRate: double read FCurrencyRate write FCurrencyRate;
  end;

  [Table('SalesInvoiceHeader', '')]
  TSalesInvoiceHeader = class
  private
    FSalesInvoiceHeaderId: integer;
    FCustomerId: integer;
    FSpecCode: string;
    FInvDescription: string;
    FCurrencyTypeId: integer;
    FCurrencyRate: double;
    FTotalAmount: double;
    FVatPercentage1: double;
    FVatAmount1: double;
    FVatPercentage2: double;
    FVatAmount2: double;
    FVatPercentage3: double;
    FVatAmount3: double;
    FTotalOtvAmount: double;
    FDueDate: integer;
    FPaid: boolean;
    FDeliveryAddress1: string;
    FDeliveryAddress2: string;
    FDeliveryAddress3: string;
    FDeliveryCity: string;
    FDeliveryCountry: string;
    FDeliveryPostCode: string;
  public
    [Column('PurchaseInvoiceHeaderId', [cpRequired, cpPrimaryKey, cpNotNull], 0, 0, 0)]
    property SalesInvoiceHeaderId: integer read FSalesInvoiceHeaderId write FSalesInvoiceHeaderId;
    [Column]
    property CustomerId: integer read FCustomerId write FCustomerId;
    [Column]
    property SpecCode: string read FSpecCode write FSpecCode;
    [Column]
    property InvDescription: string read FInvDescription write FInvDescription;
    [Column]
    property CurrencyTypeId: integer read FCurrencyTypeId write FCurrencyTypeId;
    [Column]
    property CurrencyRate: double read FCurrencyRate write FCurrencyRate;
    [Column]
    property TotalAmount: double read FTotalAmount write FTotalAmount;
    [Column]
    property VatPercentage1: double read FVatPercentage1 write FVatPercentage1;
    [Column]
    property VatAmount1: double read FVatAmount1 write FVatAmount1;
    [Column]
    property VatPercentage2: double read FVatPercentage2 write FVatPercentage2;
    [Column]
    property VatAmount2: double read FVatAmount2 write FVatAmount2;
    [Column]
    property VatPercentage3: double read FVatPercentage3 write FVatPercentage3;
    [Column]
    property VatAmount3: double read FVatAmount3 write FVatAmount3;
    [Column]
    property TotalOtvAmount: double read FTotalOtvAmount write FTotalOtvAmount;
    [Column]
    property DueDate: integer read FDueDate write FDueDate;
    [Column]
    property Paid: boolean read FPaid write FPaid;
    [Column]
    property DeliveryAddress1: string read FDeliveryAddress1 write FDeliveryAddress1;
    [Column]
    property DeliveryAddress2: string read FDeliveryAddress2 write FDeliveryAddress2;
    [Column]
    property DeliveryAddress3: string read FDeliveryAddress3 write FDeliveryAddress3;
    [Column]
    property DeliveryCity: string read FDeliveryCity write FDeliveryCity;
    [Column]
    property DeliveryCountry: string read FDeliveryCountry write FDeliveryCountry;
    [Column]
    property DeliveryPostCode: string read FDeliveryPostCode write FDeliveryPostCode;
  end;

  [Table('SalesInvoiceHeader', '')]
  TSalesInvoiceDetail = class
  private
    FSalesInvoiceDetailId: integer;
    FSalesInvoiceHeaderId: integer;
    FInventoryId: integer;
    FQuantity: double;
    FUnitPrice: double;
    FVatPercentage: double;
    FVatAmount: double;
    FOtvAmount: double;
    FTotalAmount: double;
    FSpecCode: string;
    FLineDescription: string;
    FInvoiceDate: TDateTime;
    FSupplierId: integer;
    FCurrencyTypeId: integer;
    FCurrencyRate: double;
  public
    [Column('SalesInvoiceDetailId', [cpRequired, cpPrimaryKey, cpNotNull, cpAutoGenerated], 0, 0, 0)]
    property SalesInvoiceDetailId: integer read FSalesInvoiceDetailId write FSalesInvoiceDetailId;
    [Column]
    property SalesInvoiceHeaderId: integer read FSalesInvoiceHeaderId write FSalesInvoiceHeaderId;
    [Column]
    property InventoryId: integer read FInventoryId write FInventoryId;
    [Column]
    property Quantity: double read FQuantity write FQuantity;
    [Column]
    property UnitPrice: double read FUnitPrice write FUnitPrice;
    [Column]
    property VatPercentage: double read FVatPercentage write FVatPercentage;
    [Column]
    property VatAmount: double read FVatAmount write FVatAmount;
    [Column]
    property OtvAmount: double read FOtvAmount write FOtvAmount;
    [Column]
    property TotalAmount: double read FTotalAmount write FTotalAmount;
    [Column]
    property SpecCode: string read FSpecCode write FSpecCode;
    [Column]
    property LineDescription: string read FLineDescription write FLineDescription;
    [Column]
    property InvoiceDate: TDateTime read FInvoiceDate write FInvoiceDate;
    [Column]
    property SupplierId: integer read FSupplierId write FSupplierId;
    [Column]
    property CurrencyTypeId: integer read FCurrencyTypeId write FCurrencyTypeId;
    [Column]
    property CurrencyRate: double read FCurrencyRate write FCurrencyRate;
  end;

  [Table('secUser', '')]
  TUser = class
  private
    FUserId: integer;
    FUserName: string;
    FPassword: string;
    FIsActive: boolean;
  public
    [Column('UserId', [cpRequired, cpPrimaryKey, cpNotNull, cpAutoGenerated], 0, 0, 0)]
    property UserId: integer read FUserId write FUserId;
    [Column]
    property UserName: string read FUserName write FUserName;
    [Column]
    property Password: string read FPassword write FPassword;
    [Column]
    property IsActive: boolean read FIsActive write FIsActive;
  end;

  [Table('secGroup', '')]
  TGroup = class
  private
    FGroupId: integer;
    FGroupName: string;
    FIsActive: boolean;
  public
    [Column('GroupId', [cpRequired, cpPrimaryKey, cpNotNull, cpAutoGenerated], 0, 0, 0)]
    property GroupId: integer read FGroupId write FGroupId;
    [Column]
    property GroupName: string read FGroupName write FGroupName;
    [Column]
    property IsActive: boolean read FIsActive write FIsActive;
  end;

  [Table('secGroupUser', '')]
  TGroupUser = class
  private
    FGroupId: integer;
    FUserId: integer;
  public
    [Column('GroupId', [cpRequired, cpPrimaryKey, cpNotNull], 0, 0, 0)]
    property GroupId: integer read FGroupId write FGroupId;
    [Column('UserId', [cpRequired, cpPrimaryKey, cpNotNull], 0, 0, 0)]
    property UserId: integer read FUserId write FUserId;
  end;

  [Table('secPermission', '')]
  TPermission = class
  private
    FPermissionId: integer;
    FPermDescription: string;
    FParentId: integer;
    FIsActive: boolean;
  public
    [Column('PermissionId', [cpRequired, cpPrimaryKey, cpNotNull], 0, 0, 0)]
    property PermissionId: integer read FPermissionId write FPermissionId;
    [Column]
    property PermDescription: string read FPermDescription write FPermDescription;
    [Column]
    property ParentId: integer read FParentId write FParentId;
    [Column]
    property IsActive: boolean read FIsActive write FIsActive;
  end;



implementation

end.
