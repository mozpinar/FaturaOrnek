unit View.CurrencyTypeEdit;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, View.TemplateEdit, Data.DB,
  Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Mask, Vcl.DBCtrls,
  Support.Consts;


type
  TTemplateEdit1 = class(TTemplateEdit)
    lblCurrencyCode: TLabel;
    lblCurrencyName: TLabel;
    edCurrencyCode: TDBEdit;
    edCurrencyName: TDBEdit;
  private
  protected
    class function RequiredPermission(cmd: TBrowseFormCommand) : string; override;
    procedure OnInsert(DataSet: TDataSet); override;
    procedure OnEdit(DataSet: TDataSet); override;
    procedure BeforePost(DataSet: TDataSet); override;
    procedure AfterPost(DataSet: TDataSet); override;
    procedure FormLoaded; override;

    class function GetFormName : string; override;
  public
    { Public declarations }
  end;

var
  TemplateEdit1: TTemplateEdit1;

implementation
uses MainDM,
     Model.Declarations,
     Support.LanguageDictionary,
     Support.FabricationEditForm;

{$R *.dfm}

{ TTemplateEdit1 }

procedure TTemplateEdit1.AfterPost(DataSet: TDataSet);
begin
  inherited;

end;

procedure TTemplateEdit1.BeforePost(DataSet: TDataSet);
begin
  inherited;

end;

procedure TTemplateEdit1.FormLoaded;
begin
  inherited;

end;

class function TTemplateEdit1.GetFormName: string;
begin

end;

procedure TTemplateEdit1.OnEdit(DataSet: TDataSet);
begin
  inherited;

end;

procedure TTemplateEdit1.OnInsert(DataSet: TDataSet);
begin
  inherited;

end;

class function TTemplateEdit1.RequiredPermission(
  cmd: TBrowseFormCommand): string;
begin
  Result := '>????<';
  case cmd of
    efcmdAdd: Result := '510,511';
    efcmdEdit: Result := '510,512';
    efcmdDelete: Result := '510,513';
    efcmdViewDetail: Result := '510,514';
  end;
end;

end.
